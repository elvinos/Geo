sudo: true
dist: trusty
env:
  global:
  - secure: fyZZpsLF+S/ZkzjdjteyyWjaP2SH62cKYLb1hkk0yGmbvQ6I7ajc5K9p1ti1Oy3PgvQ4HW9I3DlI0VX6XrXXFP/ItTI1FFTF1u0D5xCOrfRbpr/UtDGVFCVMOIR/HfClChEIgZLLoMxFyM2G1yPgQrk/zTGPsnwdM2FgtGJamTtH+iS2rw8AhgzDKH63Fwjshk836TU1VyYM0O+OdLOHcQGZEYTQcTOXYKhPdY0kGQFNrovA3VEKdfi7GfYXVIth+gdq7mVpUBIr20wmpKFlMHmKn0XeYM4fazl1mPN7gNGjybG6dafRemnCeZBhxAmffeiFSFaO5j2Xnwqd711vIwa31my1Duozh1lYHicT+IweXmGe2fGhU/VRZyfNEE3rL6f+7A60SrWdP6ETYB2QhuFL6le5rhzQHcyc7enG9rhrOlWhx0X168qWyx6NnGt5GyhREyeUyqw5fSuTwz6aYagVNtWvn0m6bf6Vkk5i2Kq1M22muPR8bdAQ1eSbz0N2S0KRNyLdCFHyQIYNW129EH56+UGN57iw+78rq0ys7be7kzv66Exgf9pSWvVc3SnuJnsE2nrp6WtCNBNHLm1E79CnCmbwyUOy3IirtDptY12/TPJvJi2mXIbh4v64ziECJL/aDESe3/FIOcKk3deYFIwswzSEwQVNSF8DAeFONRY=
  - secure: i1QitQySRh/c4TF+HdNu6yPMNCq2+c+YOfoasvpTVlmc5tQbP6YstUNyiTjrvrkbltXOv2wpZRGiRocTBezBkHW0NfRTejGgFHv9sEXAnlH0d5yh3j4hp8if0dau8o8G3ZL97rGSyUCsOoGFECmI3wpVpHIfoziEIsmJenh7+sxdnj6p+mS8UHvM+KA9HrfbUJZlFIwhskt1u7+jyPw/sZ/r8N83nKrh+kmRauLkBWJy25n8gllJsRxYgtS48c5/J+RLMHf2xboPzBjF2T/HBHZ5kpEA9sdwR24sJ/DTYKx+VwQTKylz5gUMBNisrUJp8a35DluBCatnhkExSuAO+nrj8FAl7cJbry7A+egypGgDnasFh6sxVhC2ocZRa2/BajUQ1CFYz3H8ft3K8N/SPaL5zk//jVzFuJ+CQO6P0u9lR2tWTHIa/0SR7av1Kb/t8Wd2hb5IlzHxEDSfIfcIbPdomowRHxCfUfnefPI32uuDWzCWkGmYM5q0P2mrU1BMsUUs/xiyYSJJwEl4sK16OhtVH1LRuiuuZc+viUU9L8F2SXQ6BvkUYEUpVc0EKc7NenmB4Aj0xos85v0jrtjv6HIdVoMMo3F48lInorDAgx8BkIDMJf47lZ0BCgt6TnWh6rt+DdWbpQF60o15DNW2imcElavpCQQso7+NztFKgVI=
  stages:
  - compile
  - deploy
jobs:
  include:
  - stage: compile
    script:
    - openssl aes-256-cbc -K $encrypted_3c84dcdc6bbe_key -iv $encrypted_3c84dcdc6bbe_iv
      -in .env.enc -out .env -d
    - docker login -u="$DOCKER_USER" -p="$DOCKER_PASS"
    - docker-compose -f docker-compose-prod.yml build
    - docker tag 0.0.0.0:5000/geo-nginx elvinos/geo:geo-nginx
    - docker tag 0.0.0.0:5000/geo-backend elvinos/geo:geo-backend
    - docker tag 0.0.0.0:5000/geo-traefik elvinos/geo:geo-traefik
    - docker tag 0.0.0.0:5000/geo-postgres elvinos/geo:geo-postgres
    - docker image ls
    - if [ "$TRAVIS_BRANCH" = "master" ]; then docker push elvinos/geo:geo-nginx;
      fi
    - if [ "$TRAVIS_BRANCH" = "master" ]; then docker push elvinos/geo:geo-backend;
      fi
    - if [ "$TRAVIS_BRANCH" = "master" ]; then docker push elvinos/geo:geo-traefik;
      fi
    - if [ "$TRAVIS_BRANCH" = "master" ]; then docker push elvinos/geo:geo-postgres;
      fi
  - stage: deploy
    if: branch = master
    before_install:
    - openssl aes-256-cbc -K $encrypted_3c84dcdc6bbe_key -iv $encrypted_3c84dcdc6bbe_iv
      -in .env.enc -out .env -d
    - openssl aes-256-cbc -K $encrypted_dfdcfd5172af_key -iv $encrypted_dfdcfd5172af_iv
      -in deploy_key.enc -out ./deploy_key -d
    - eval "$(ssh-agent -s)"
    - chmod 600 ./deploy_key
    - echo -e "Host $SERVER_IP_ADDRESS\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
    - ssh-add ./deploy_key
    - ls -al /bin/sh && sudo rm /bin/sh && sudo ln -s /bin/bash /bin/sh && ls -al
      /bin/sh
    script:
    - if [ "$TRAVIS_BRANCH" = "master" ]; then sh ./deploy.sh; fi
