sudo: true
dist: trusty
env:
  global:
  - secure: fxot4X1OsK6sysRopzfdSfd42EbjmhWxPq1bats54zduuw9hfXA3SgWcKoAP2oUqow7lH3TRQ/fQ0xXSHFKqNGbBpQhI9wKkdNd1jAwHPr8n3MR71jJxUIUR5ZmZ0FpKrIQGikIkEZAAZ4dA7+K4ZAUlfWJA/D6vhy59ia0M8+omqob+bIflnPY8/JNQbPOuH5eCGSndx864akEzuYTBQlhAFEOY/kqliom5LE4od3WU/zM55f55mKizQG2Q9FNsHO268Zo/Le3aFIZnyiirjWqBrU1IBHi7bt2RQ+iELLKjhsOQepqC5Fn1H+qy0iV4kZNR8ZAfSuP8fNHMTepx2HbzJuhIHJNPTKlX3kfvo3cdHAbCWdYGRfy+U3Gxw1DQCTCXEB1jZ3hlyP5MXrlfn3lehLGn/rRjwapLTp6vn3plUM+8v5yz6EZs/gDBbY9xzC84BmN19eExu9hlOYzgPNyQgVoQu3RfOsIXLy55nmug4D2AHJqOoA+Ex04uZHxxV/xZdF92sHuDf7/VlAg9iu8N4+EhnwWHJ7pewZPeGaojNskPlzpSt0UkSgcUZytxqEg7o9TVSewmD5VPiO8OZaqcQKwH2ftGwrCqmxnZPKQc1WkVZfKfCowBz4135sFiQvRidq+y9L+nvJ6OldmX5SfOWZzSLr+f8xzqXrsyY+A=
  - secure: RRN+pPvIkApTxLddlYhLeVZhu2bjh6oaJCxwCJdq7/JgIdaZTZbb96mBomqMNy2i3RAm2IcSQZXIHigKQZ8rr1bv5RJCSgsKoOrficBQs+K+irs+1lngv7a12WYnRk0sySfo/0W66qu1XFvEe8pHBi+GBGs7JxudwH7rjf4NSGD6PydWAPEZG2VJMJq35G+12MejDX6Q/ZoEZlARkROMZF/80+0F4onFpGXkh7TuhkNcU2U/Q2j/EQKWL4vQgsuGksvSfI9rPIkwiSpXcWMY0n2d2eiDp8humTXMYMBv0salhJWl6rfy0+3xxMHEkun5JI5UmJI7E8Anu6Mysgnp6YxC0yqT0d0/xw8l8wSFNrtYINiyaz6DJn10XcVTa/ssGecOwpnlNjA7icB6DINDQMHwZP0CQhyUQIyX9RbCHAG1c+QIPTHYE1wWsQrPDfm04Df5bt/vQNc3lW3vREM5+mLusulFFAz7QdlwXFTsUZgzbxn3cbgL2YFoq7qZvb4CwNWtEEnLklzcoyv5B6nIuNlzq1AcmsIH40Zx3ZJwHYQ2eELSGpD+USgH5lXWL9y+ItwSkWxvfHjThvRIWSWK9iyfm7allS8KfRXxZhArqlancSUUr3CQZtQ7DCeMiIxlHdxvY8fGYYb8BOtrsKAZr6QPaExDlyPfP93bxkmU4Gw=
  - secure: ErIcJpNlqpHZBQqKjcHSTyU9c6eW7aoeCQ55tWEw0JQPyMtravALvgF37wINLipM941XunEHMBvDtTJHO9WCugs3nx1Ws1GdDUMwuYnXCV9uhO41pcs92H8+uXScLnyoNNewT+U6mAVHaVDJYZ2/Cr5I7OqWWW1WphlXGB/N8t+wMGNtNyhluXSMVN/NRLfz26lzHYoNrpJHH7CYVcddMDk+X2UqBYX5M5dT2rGtGXYfNZmT7jrBfFuzEssEEjbuWEX0kKYf2c+OIw5gD4oB2n6e1uvVSjzLNVq04v80h/9LU1eQJ/aE2DexeZDQqW7zAZzbMawoKuCQNeumfjQzxRo9IZNcXeO8cTuAN/CrbCIRuYtI+ZKWb3GAC3Ku4guzPBXa2C7VY7vi39t4QPCoRN4R8rKMm01ZA9XfGZvHLtnUUHL/DRDuQ/lZj0VyLtBX35IZ6g7VzdjCZJpS4N5x/zeBEwb4Ul/e2UawZ1R8g2IL5XxMe+o7ZOUHVgrZ+5s6+z4X5sod1wdIKKB8AMxR/HqFXF/zCW/qgkghW7RIaLrM2HBeXqJrFwec+nAqzIRooCnbVCLSucpONsquh7RMs1ed5/MilV02Jnlj4E7bP58mIOluyTU2UWWgk5pGnNijB1ObOMmcdIvHxfq/R+wt522wvrCyy7cR6sgggXli9Mk=
  - secure: tilbAzP+yRxPoNDePWALBU0/RBYhcvhV3GcMTh1mQ2FtAL4xb1VOoAD5p6HRATYebG1e7oFtxBqQ8rqYoEHsZ0+vLMGaBaoNZ5lnswlZLouE6Zp5lPR0vE+cvqMwlXEJ5S5JLkwOQgNxvQKZTiOuP1xCzM9G1Pz3K8UaKYxfDh2xj4x84gGAp7E8E4vhygQUc+Wa2uos60tS22Qs6/dFec9yIsaj1V8x65x9cToo74NF1+VMxK/N7bGT8UvEjZNGabaUCyjbFh1SIOR3P9AW+FzPo/XwK/SK62RWOqVUjUjpS8j3KnL8hz0oTJur8hXKXNXcX6Qg+jCJfyOe0RLHsoC1fmkWKFroanc7rnKDDNt/1pqYj56dd2swi6HbHEmnuntKvTFjAHv5dn46z+iSOQpgNiiv7jKzW0BCGIHoHkUkSEYYz/ujWJoWgp1psPHpo4dW8WDZFGIQt1y04chspal3tVObTUElhjtCcBHdv2fhKzgp+4d2eQ5gWh0bF/FUM2t1ay8CssSZUsPlZN0lFS0c5KUpGdsWa21hgEbhmhqTCBKY+M/lseAIC3zEBKqUx+qdx1jOjSJKWEprqu43w+C+pZZBtKUoKHfti4khQc7/cehCVgXwdFXi8Mqt7HrBSZg+ZgB9Zqfe33E4vkwF0iJDT/o/fWbeEb4cF9vbM+0=
  stages:
  - compile
  - deploy
jobs:
  include:
  - stage: compile
    script:
    - openssl aes-256-cbc -K $encrypted_3c84dcdc6bbe_key -iv $encrypted_3c84dcdc6bbe_iv
      -in .env.enc -out .env -d
    - docker login -u="$DOCKER_USER" --password-stdin="$DOCKER_PASS"
    - docker-compose -f docker-compose-prod.yml build
    - docker tag 0.0.0.0:5000/geo-nginx elvinos/geo:geo-nginx
    - docker tag 0.0.0.0:5000/geo-backend elvinos/geo:geo-backend
    - docker tag 0.0.0.0:5000/geo-traefik elvinos/geo:geo-traefik
    - docker tag 0.0.0.0:5000/geo-postgres elvinos/geo:geo-postgres
    - docker image ls
    - if [ "$TRAVIS_BRANCH" = "master" ]; then docker push elvinos/geo:geo-nginx;
      fi
    - if [ "$TRAVIS_BRANCH" = "master" ]; then docker push elvinos/geo:geo-backend;
      fi
    - if [ "$TRAVIS_BRANCH" = "master" ]; then docker push elvinos/geo:geo-traefik;
      fi
    - if [ "$TRAVIS_BRANCH" = "master" ]; then docker push elvinos/geo:geo-postgres;
      fi
  - stage: deploy
    if: branch = master
    before_install:
    - openssl aes-256-cbc -K $encrypted_3c84dcdc6bbe_key -iv $encrypted_3c84dcdc6bbe_iv
      -in .env.enc -out .env -d
    - openssl aes-256-cbc -K $encrypted_189e52c2c347_key -iv $encrypted_189e52c2c347_iv
      -in deploy_key.enc -out deploy_key -d
    - eval "$(ssh-agent -s)"
    - chmod 600 ./deploy_key
    - echo -e "Host $SERVER_IP_ADDRESS\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
    - ssh-add ./deploy_key
    - ls -al /bin/sh && sudo rm /bin/sh && sudo ln -s /bin/bash /bin/sh && ls -al
      /bin/sh
    script:
    - if [ "$TRAVIS_BRANCH" = "master" ]; then sh ./deploy.sh; fi
